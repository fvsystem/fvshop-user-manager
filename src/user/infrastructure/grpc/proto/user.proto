message HealthCheckRequest {
    optional string service = 1;
}
  
  message HealthCheckResponse {
    enum ServingStatus {
      UNKNOWN = 0;
      SERVING = 1;
      NOT_SERVING = 2;
      SERVICE_UNKNOWN = 3;  // Used only by the Watch method.
    }
    required ServingStatus status = 1;
  }
  
  service Health {
    rpc Check(HealthCheckRequest) returns (HealthCheckResponse);
  
    rpc Watch(HealthCheckRequest) returns (stream HealthCheckResponse);
  }

message User {
    required string id = 1;
    required string firstName = 2;
    required string lastName = 3;
    required string fullName = 4;
    required string email = 5;
    repeated string roles = 6;
}

message GetByIdRequest {
    required string userId = 1;
}

message GetAllUsersRequest {
    optional int32 limit = 1;
    optional int32 offset = 2;
}

message GetAllUsersResponse {
    repeated User users = 1;
}


message GetByIdResponse {
    required User user = 1;
}

message GetByEmailRequest {
    required string email = 1;
}

message GetByEmailResponse {
    required User user = 1;
}

message CreateUserRequest {
    required string firstName = 1;
    required string lastName = 2;
    required string email = 3;
    repeated string roles = 4;
    required string password = 5;
}

message CreateUserResponse {
    required User user = 1;
}

service GetByEmail {
    rpc GetByEmail(GetByEmailRequest) returns (GetByEmailResponse);
}

service GetById {
    rpc GetById(GetByIdRequest) returns (GetByIdResponse);
}

service CreateUser {
    rpc CreateUser(CreateUserRequest) returns (CreateUserResponse);
}

service GetAllUsers {
    rpc GetAllUsers(GetAllUsersRequest) returns (GetAllUsersResponse);
}